- last = @savers.size - 1
- next_last = last - 1
%div{:class => "saver #{'right' if saver_counter.odd?} #{'no-border' if saver_counter.even? && saver_counter >= next_last || saver_counter.odd? && saver_counter == last}"}
  .info
    %table{:border => "0", :width => "100%", :style => "margin-top:0px;", :cellpadding => "0"}

      -# Goal & Region
      =render :partial => "savers/saver/detail", :locals => {:detail => "#{:goal.l}:", :value => saver.asset_type}
      =render :partial => "savers/saver/detail", :locals => {:detail => "#{:region.l}:", :value => saver.metro_area.name}
      
      -# Spacer
      =render :partial => "savers/saver/spacer"
    
      -# Match Info
      =render :partial => "savers/saver/detail", :locals => {:detail => "#{:match_requested.l}:", :value => saver.requested_match_amount.format(:no_cents)}
      =render :partial => "savers/saver/detail", :locals => {:detail => "#{:match_committed.l}:", :value => "#{saver.matched_amount.format(:no_cents)} (#{(saver.match_percent*100).round}%)"}
    
      -# Progress Bar
      =render :partial => "savers/saver/progress_bar", :locals => {:saver => saver, :style => "progress-bar"}
    
      -# Match Controls
      %table{:border => "0", :cellpadding => "1", :width => "75%"}
        - if saver.match_amount_left_cents > 0
          - form_for :donation, :url => { :controller => :pledges, :action => :add_to_pledge } do |f|
            %tr
              %td{:align => "right"}
                = f.select :cents, select_pledge_amounts_cents_values(saver.match_amount_left_cents)
                = f.hidden_field :to_user_id, :value => saver.id
              %td{:align => "left"}
                = image_submit_tag "#{image_path('buttons/match.gif')}", :alt => 'Match'
        - else
          %tr
            %td{:align => "center"}
              %p.large-text
                %em
                  = "#{:already_funded.l}"

  -# Thumbnail
  %a{:class => 'with-img', :href => "#{saver_path(saver)}"}
    =image_tag(saver.avatar_photo_url(:thumb))
    %span
      =:savers_story.l :saver => "#{possessivize(saver.display_name).upcase}"
